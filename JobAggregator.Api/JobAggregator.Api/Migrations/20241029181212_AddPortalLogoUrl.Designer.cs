// <auto-generated />
using System;
using JobAggregator.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobAggregator.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241029181212_AddPortalLogoUrl")]
    partial class AddPortalLogoUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobAggregator.Api.Models.JobPosting", b =>
                {
                    b.Property<int>("JobPostingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobPostingID"));

                    b.Property<string>("ApplyUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateScraped")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HashCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortalID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobPostingID");

                    b.HasIndex("ExternalID")
                        .IsUnique();

                    b.HasIndex("HashCode")
                        .IsUnique();

                    b.HasIndex("PortalID");

                    b.ToTable("JobPostings");
                });

            modelBuilder.Entity("JobAggregator.Api.Models.Portal", b =>
                {
                    b.Property<int>("PortalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortalID"));

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PortalLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortalID");

                    b.ToTable("Portals");
                });

            modelBuilder.Entity("JobAggregator.Api.Models.JobPosting", b =>
                {
                    b.HasOne("JobAggregator.Api.Models.Portal", "Portal")
                        .WithMany("JobPostings")
                        .HasForeignKey("PortalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portal");
                });

            modelBuilder.Entity("JobAggregator.Api.Models.Portal", b =>
                {
                    b.Navigation("JobPostings");
                });
#pragma warning restore 612, 618
        }
    }
}
